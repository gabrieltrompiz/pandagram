dbUrl=jdbc:postgresql://localhost:5432/social-network
dbUser=postgres
dbPassword=mastersword
dbDriver=org.postgresql.Driver

#Email Username and Password
emailUser=siulptt@gmail.com
emailPassword=eresbella123

checkLowercaseUsername=SELECT * FROM users WHERE user_lowercase_username = ?

checkEmail=SELECT * FROM users WHERE user_email = ?

registerUser=INSERT INTO users (user_username, user_lowercase_username, user_password, user_name, \
  user_lastname, user_email, user_birthday, user_creation_time, user_avatar, type_user_id, user_sex, \
  user_enabled) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

login=SELECT * FROM users WHERE user_lowercase_username = ? AND user_password = ?

#login=SELECT * FROM users WHERE user_password = ? AND (user_lowercase_username =? OR user_email = ?)

updateUser=UPDATE users SET user_name=?, user_lastname=?, \
  user_email=?, user_birthday=?, user_sex=? WHERE user_id=? AND user_password=?

updateUserPassword=UPDATE users SET user_password=? WHERE user_id=?

updateUserEmail=UPDATE users SET user_email=? WHERE user_id=?

addFriend=INSERT INTO friends (user_id1, user_id2, date) SELECT u.user_id, u2.user_id, now() FROM users u, users u2 \
  WHERE u.user_id = ? AND u2.user_id = ?; \
  INSERT INTO friends (user_id2, user_id1, date) SELECT u.user_id, u2.user_id, now() FROM users u, users u2 \
  WHERE u.user_id = ? AND u2.user_id = ?;

friendList=SELECT u.user_id, u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_birthday \
FROM users u INNER JOIN friends f ON f.user_id2 = u.user_id \
WHERE f.user_id1 = ? AND u.user_enabled = true;

searchFriends=SELECT u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_birthday \
FROM users u INNER JOIN friends f ON f.user_id2 = u.user_id \
WHERE f.user_id1 = ? \
AND (u.user_username ILIKE ? OR u.user_name ILIKE ? OR u.user_lastname ILIKE ? OR CONCAT(u.user_name, ' ', u.user_lastname) ILIKE ? ) \
AND u.user_enabled = true;

#isFriend=SELECT friends_id from friends f INNER JOIN users u ON f.user_id1 = u.user_id INNER JOIN users u2 ON f.user_id2 = u2.user_id \
#  WHERE u2.user_lowercase_username = ? AND u.user_lowercase_username = ?

#deleteFriend=DELETE FROM friends f USING users u, users u2 WHERE f.user_id1 = u.user_id \
#  AND u.user_lowercase_username = ? AND f.user_id2 = u2.user_id AND u2.user_lowercase_username = ?; \
#  DELETE FROM friends f USING users u, users u2 WHERE f.user_id1 = u.user_id \
#  AND u.user_lowercase_username = ? AND f.user_id2 = u2.user_id AND u2.user_lowercase_username = ?;

#getUser=SELECT user_username, user_name, user_lastname, \
#  user_email, user_birthday, user_avatar, user_sex, user_id \
#  FROM users WHERE user_lowercase_username = ?

searchUsers=SELECT user_id, user_username, user_name, user_lastname, user_avatar, user_birthday \
  FROM users WHERE (user_username ILIKE ? OR user_name ILIKE ? OR user_lastname ILIKE ? \
  OR CONCAT(user_name, ' ', user_lastname) ILIKE ?) AND type_user_id != 2 AND user_enabled = true;

getPosts=SELECT p.post_id, p.type_post_id, p.post_text, p.post_url, p.post_creation_time, \
u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_id \
FROM post p INNER JOIN users u ON p.user_id = u.user_id \
WHERE p.user_id IN ( \
SELECT f.user_id2 FROM friends f WHERE f.user_id1 = ?) OR p.user_id = ? \
AND p.post_id < ? AND u.user_enabled = true \
ORDER BY post_creation_time DESC LIMIT 20;

getPostsWithoutLimit=SELECT post_id, p.type_post_id, p.post_text, p.post_url, p.post_creation_time, \
u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_id \
FROM post p INNER JOIN users u ON p.user_id = u.user_id \
WHERE p.user_id IN ( \
SELECT f.user_id2 FROM friends f WHERE f.user_id1 = ?) OR p.user_id = ? \
AND p.post_id > ? AND u.user_enabled = true \
ORDER BY post_creation_time DESC LIMIT 20;

getUserPosts=SELECT post_id, type_post_id, post_text, post_url, post_creation_time FROM post \
  WHERE user_id = ? ORDER BY post_creation_time DESC;

checkFR=SELECT * from notifications where notification_sender = ? AND notification_receiver = ? \
AND type_notification_id = 1 AND notification_accepted IS NULL;

addPost=INSERT INTO post (user_id, type_post_id, post_text, post_url, post_creation_time) \
VALUES(?, ?, ?, null, now());

deletePost=DELETE FROM likes WHERE post_id = ?; DELETE FROM comments WHERE post_id = ?; DELETE FROM post WHERE user_id = ? AND post_id = ?; UPDATE \
  reports SET report_resolved = true WHERE report_target = ? AND type_report_id = 1;

getNotifications=SELECT n.notification_id, n.notification_sender, n.notification_receiver, n.notification_date, n.notification_accepted, \
  n.type_notification_id, u.user_username, u.user_name, u.user_lastname FROM notifications n \
  INNER JOIN users u ON n.notification_sender = u.user_id WHERE n.notification_receiver = ? AND u.user_enabled = true \
  ORDER BY notification_date DESC LIMIT ?;

insertNotification=INSERT INTO notifications (notification_sender, notification_receiver, type_notification_id,\
  notification_date, notification_accepted) VALUES (?, ?, ?, now(), ?);

setAcceptedNotification=UPDATE notifications SET notification_accepted = ? WHERE notification_sender = ? and notification_receiver = ? AND type_notification_id = 1;
deleteNotification=DELETE FROM notifications WHERE notifications_id = ?;

insertLike=INSERT INTO likes (user_id, post_id, type_like_id) VALUES(?, ?, ?)
deleteLike=DELETE FROM likes WHERE user_id = ? AND like_id = ?;
updateLike=UPDATE likes SET type_like_id = ? WHERE user_id = ? AND like_id = ?;

getLikes=SELECT l.like_id, l.user_id, l.type_like_id, u.user_username, u.user_name, u.user_lastname \
   FROM likes l INNER JOIN users u ON u.user_id = l.user_id WHERE post_id = ? AND u.user_enabled = true;

getComments=SELECT c.comment_id, c.comment_text, c.comment_url, c.user_id, u.user_username, u.user_name,\
  u.user_lastname FROM comments c INNER JOIN users u ON c.user_id = u.user_id WHERE c.post_id = ? AND u.user_enabled = true;

insertComment=INSERT INTO comments (user_id, post_id, comment_text, comment_url) \
  SELECT u.user_id, p.post_id, ?, ? \
  FROM users u, post p \
  WHERE p.post_id = ? AND u.user_id = ?;

deleteComment=DELETE FROM comments WHERE user_id = ? AND comment_id = ?; UPDATE reports SET report_resolved = true WHERE report_target = ? AND type_report_id = 2;

getAllUsers=SELECT user_id, user_username, user_name, user_lastname, user_birthday, user_creation_time, \
user_sex FROM users WHERE user_enabled = true AND type_user_id != 2 AND user_enabled = true;

getAllPosts=SELECT p.post_id, p.type_post_id, post_text, post_creation_time, u.user_username, u.user_name, u.user_lastname, \
   u.user_id FROM post p INNER JOIN users u ON u.user_id = p.user_id WHERE u.user_enabled = true;

getAllFriends=SELECT  f.user_id1, f.user_id2, u.user_username, \
   u2.user_username, u2.user_name, u2.user_lastname, u2.user_birthday, u2.user_creation_time, u2.user_sex FROM friends f \
  INNER JOIN users u ON u.user_id = f.user_id1 INNER JOIN users u2 ON u2.user_id = f.user_id2 WHERE u.user_enabled = true AND u2.user_enabled = true;

getUsersByAge=SELECT user_id, user_username, user_name, user_lastname, user_birthday, user_creation_time, user_sex \
FROM users WHERE user_enabled = true ORDER BY user_birthday DESC

searchUsersAdmin=SELECT user_id, user_username, user_name, user_lastname, user_avatar, user_birthday, user_enabled \
  FROM users WHERE (user_username ILIKE ? OR user_name ILIKE ? OR user_lastname ILIKE ? \
  OR CONCAT(user_name, ' ', user_lastname) ILIKE ?) AND type_user_id != 2

getPostsByContent=SELECT p.*, u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_id FROM post p \
  INNER JOIN users u ON p.user_id = u.user_id WHERE post_text ILIKE ? AND u.user_enabled = true;

getCommentsByContent=SELECT c.comment_id, c.comment_text, c.comment_url, c.user_id, u.user_username, u.user_name, u.user_lastname FROM comments c \
  INNER JOIN users u ON c.user_id = u.user_id WHERE comment_text ILIKE ? AND u.user_enabled = true;

getUserById = SELECT user_name, user_lastname, user_email FROM users WHERE user_id = ?;

changeUserState=UPDATE users SET user_enabled = ? WHERE user_id = ?;

deletePostAdmin=DELETE FROM likes WHERE post_id = ?; DELETE FROM comments WHERE post_id = ?;\
   DELETE FROM post WHERE post_id = ?; UPDATE reports SET report_resolved = true WHERE report_target = ? AND type_report_id = 1;

deleteCommentAdmin=DELETE FROM comments WHERE comment_id = ?; UPDATE reports SET report_resolved = true WHERE report_target = ? AND type_report_id = 2;

getReports=SELECT r.*, u.user_username, u.user_name, u.user_lastname FROM reports r INNER JOIN users u ON report_sender = u.user_id \
  WHERE report_resolved = false ORDER BY r.report_date DESC

addReport=INSERT INTO reports(report_sender, report_target, type_report_id, report_date, report_message, report_resolved) VALUES(?, ?, ?, NOW(), ?, false);

setResolved=UPDATE reports SET report_resolved = true WHERE report_id = ?

getSingleComment=SELECT c.*, u.user_username, u.user_name, u.user_lastname FROM comments c INNER JOIN users u ON c.user_id = u.user_id WHERE comment_id = ?

getSinglePost=SELECT p.*, u.user_username, u.user_name, u.user_lastname FROM post p INNER JOIN users u ON p.user_id = u.user_id WHERE post_id = ?


#Email Responses
friendRequestMailHTML=<h1>{0} Sent you a friend request on Pandagram</h1><button onclick="sendRequest()">Accept</button>\
  <button onclick="declineRequest()">Decline</button><script type="text/javascript">let sent = false;\
  function sendRequest() {if (!sent) {sent = true;/*Enviar la vaina*/}}function declineRequest() {if (!sent)\
   {sent = true;/*Enviar la vaina*/}}</script>

tagMailHTML=<h1>{0} has tagged you in a post</h1><!--PAPI NO SÉ AAAAAAAAAAAAAAAAAAAAAA-->